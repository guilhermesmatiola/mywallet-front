{"ast":null,"code":"import { createElement, Component } from 'react';\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\n\n/* global Reflect, Promise */\n\nvar extendStatics = function (d, b) {\n  extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n  };\n\n  return extendStatics(d, b);\n};\n\nfunction __extends(d, b) {\n  extendStatics(d, b);\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nvar __assign = function () {\n  __assign = Object.assign || function __assign(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nfunction __rest(s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  return t;\n}\n\nvar VIEWBOX_WIDTH = 100;\nvar VIEWBOX_HEIGHT = 100;\nvar VIEWBOX_HEIGHT_HALF = 50;\nvar VIEWBOX_CENTER_X = 50;\nvar VIEWBOX_CENTER_Y = 50;\n\nfunction Path(_a) {\n  var className = _a.className,\n      counterClockwise = _a.counterClockwise,\n      dashRatio = _a.dashRatio,\n      pathRadius = _a.pathRadius,\n      strokeWidth = _a.strokeWidth,\n      style = _a.style;\n  return createElement(\"path\", {\n    className: className,\n    style: Object.assign({}, style, getDashStyle({\n      pathRadius: pathRadius,\n      dashRatio: dashRatio,\n      counterClockwise: counterClockwise\n    })),\n    d: getPathDescription({\n      pathRadius: pathRadius,\n      counterClockwise: counterClockwise\n    }),\n    strokeWidth: strokeWidth,\n    fillOpacity: 0\n  });\n}\n\nfunction getPathDescription(_a) {\n  var pathRadius = _a.pathRadius,\n      counterClockwise = _a.counterClockwise;\n  var radius = pathRadius;\n  var rotation = counterClockwise ? 1 : 0;\n  return \"\\n      M \" + VIEWBOX_CENTER_X + \",\" + VIEWBOX_CENTER_Y + \"\\n      m 0,-\" + radius + \"\\n      a \" + radius + \",\" + radius + \" \" + rotation + \" 1 1 0,\" + 2 * radius + \"\\n      a \" + radius + \",\" + radius + \" \" + rotation + \" 1 1 0,-\" + 2 * radius + \"\\n    \";\n}\n\nfunction getDashStyle(_a) {\n  var counterClockwise = _a.counterClockwise,\n      dashRatio = _a.dashRatio,\n      pathRadius = _a.pathRadius;\n  var diameter = Math.PI * 2 * pathRadius;\n  var gapLength = (1 - dashRatio) * diameter;\n  return {\n    strokeDasharray: diameter + \"px \" + diameter + \"px\",\n    strokeDashoffset: (counterClockwise ? -gapLength : gapLength) + \"px\"\n  };\n}\n\nvar CircularProgressbar = function (_super) {\n  __extends(CircularProgressbar, _super);\n\n  function CircularProgressbar() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  CircularProgressbar.prototype.getBackgroundPadding = function () {\n    if (!this.props.background) {\n      return 0;\n    }\n\n    return this.props.backgroundPadding;\n  };\n\n  CircularProgressbar.prototype.getPathRadius = function () {\n    return VIEWBOX_HEIGHT_HALF - this.props.strokeWidth / 2 - this.getBackgroundPadding();\n  };\n\n  CircularProgressbar.prototype.getPathRatio = function () {\n    var _a = this.props,\n        value = _a.value,\n        minValue = _a.minValue,\n        maxValue = _a.maxValue;\n    var boundedValue = Math.min(Math.max(value, minValue), maxValue);\n    return (boundedValue - minValue) / (maxValue - minValue);\n  };\n\n  CircularProgressbar.prototype.render = function () {\n    var _a = this.props,\n        circleRatio = _a.circleRatio,\n        className = _a.className,\n        classes = _a.classes,\n        counterClockwise = _a.counterClockwise,\n        styles = _a.styles,\n        strokeWidth = _a.strokeWidth,\n        text = _a.text;\n    var pathRadius = this.getPathRadius();\n    var pathRatio = this.getPathRatio();\n    return createElement(\"svg\", {\n      className: classes.root + \" \" + className,\n      style: styles.root,\n      viewBox: \"0 0 \" + VIEWBOX_WIDTH + \" \" + VIEWBOX_HEIGHT,\n      \"data-test-id\": \"CircularProgressbar\"\n    }, this.props.background ? createElement(\"circle\", {\n      className: classes.background,\n      style: styles.background,\n      cx: VIEWBOX_CENTER_X,\n      cy: VIEWBOX_CENTER_Y,\n      r: VIEWBOX_HEIGHT_HALF\n    }) : null, createElement(Path, {\n      className: classes.trail,\n      counterClockwise: counterClockwise,\n      dashRatio: circleRatio,\n      pathRadius: pathRadius,\n      strokeWidth: strokeWidth,\n      style: styles.trail\n    }), createElement(Path, {\n      className: classes.path,\n      counterClockwise: counterClockwise,\n      dashRatio: pathRatio * circleRatio,\n      pathRadius: pathRadius,\n      strokeWidth: strokeWidth,\n      style: styles.path\n    }), text ? createElement(\"text\", {\n      className: classes.text,\n      style: styles.text,\n      x: VIEWBOX_CENTER_X,\n      y: VIEWBOX_CENTER_Y\n    }, text) : null);\n  };\n\n  CircularProgressbar.defaultProps = {\n    background: false,\n    backgroundPadding: 0,\n    circleRatio: 1,\n    classes: {\n      root: 'CircularProgressbar',\n      trail: 'CircularProgressbar-trail',\n      path: 'CircularProgressbar-path',\n      text: 'CircularProgressbar-text',\n      background: 'CircularProgressbar-background'\n    },\n    counterClockwise: false,\n    className: '',\n    maxValue: 100,\n    minValue: 0,\n    strokeWidth: 8,\n    styles: {\n      root: {},\n      trail: {},\n      path: {},\n      text: {},\n      background: {}\n    },\n    text: ''\n  };\n  return CircularProgressbar;\n}(Component);\n\nfunction CircularProgressbarWithChildren(props) {\n  var children = props.children,\n      circularProgressbarProps = __rest(props, [\"children\"]);\n\n  return createElement(\"div\", {\n    \"data-test-id\": \"CircularProgressbarWithChildren\"\n  }, createElement(\"div\", {\n    style: {\n      position: 'relative',\n      width: '100%',\n      height: '100%'\n    }\n  }, createElement(CircularProgressbar, __assign({}, circularProgressbarProps)), props.children ? createElement(\"div\", {\n    \"data-test-id\": \"CircularProgressbarWithChildren__children\",\n    style: {\n      position: 'absolute',\n      width: '100%',\n      height: '100%',\n      marginTop: '-100%',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center'\n    }\n  }, props.children) : null));\n}\n\nfunction buildStyles(_a) {\n  var rotation = _a.rotation,\n      strokeLinecap = _a.strokeLinecap,\n      textColor = _a.textColor,\n      textSize = _a.textSize,\n      pathColor = _a.pathColor,\n      pathTransition = _a.pathTransition,\n      pathTransitionDuration = _a.pathTransitionDuration,\n      trailColor = _a.trailColor,\n      backgroundColor = _a.backgroundColor;\n  var rotationTransform = rotation == null ? undefined : \"rotate(\" + rotation + \"turn)\";\n  var rotationTransformOrigin = rotation == null ? undefined : 'center center';\n  return {\n    root: {},\n    path: removeUndefinedValues({\n      stroke: pathColor,\n      strokeLinecap: strokeLinecap,\n      transform: rotationTransform,\n      transformOrigin: rotationTransformOrigin,\n      transition: pathTransition,\n      transitionDuration: pathTransitionDuration == null ? undefined : pathTransitionDuration + \"s\"\n    }),\n    trail: removeUndefinedValues({\n      stroke: trailColor,\n      strokeLinecap: strokeLinecap,\n      transform: rotationTransform,\n      transformOrigin: rotationTransformOrigin\n    }),\n    text: removeUndefinedValues({\n      fill: textColor,\n      fontSize: textSize\n    }),\n    background: removeUndefinedValues({\n      fill: backgroundColor\n    })\n  };\n}\n\nfunction removeUndefinedValues(obj) {\n  Object.keys(obj).forEach(function (key) {\n    if (obj[key] == null) {\n      delete obj[key];\n    }\n  });\n  return obj;\n}\n\nexport { CircularProgressbar, CircularProgressbarWithChildren, buildStyles };","map":{"version":3,"mappings":"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","names":["VIEWBOX_WIDTH","VIEWBOX_HEIGHT","VIEWBOX_HEIGHT_HALF","VIEWBOX_CENTER_X","VIEWBOX_CENTER_Y","Path","_a","className","counterClockwise","dashRatio","pathRadius","strokeWidth","style","React.createElement","Object","assign","getDashStyle","d","getPathDescription","fillOpacity","radius","rotation","diameter","Math","PI","gapLength","strokeDasharray","strokeDashoffset","__extends","CircularProgressbar","props","background","backgroundPadding","getBackgroundPadding","value","minValue","maxValue","boundedValue","min","max","circleRatio","classes","styles","text","getPathRadius","pathRatio","getPathRatio","root","viewBox","cx","cy","r","trail","path","x","y","React.Component","CircularProgressbarWithChildren","circularProgressbarProps","position","width","height","__assign","children","marginTop","display","flexDirection","justifyContent","alignItems","buildStyles","strokeLinecap","textColor","textSize","pathColor","pathTransition","pathTransitionDuration","trailColor","backgroundColor","rotationTransform","undefined","rotationTransformOrigin","removeUndefinedValues","stroke","transform","transformOrigin","transition","transitionDuration","fill","fontSize","obj","keys","forEach","key"],"sources":["../src/constants.ts","../src/Path.tsx","../src/CircularProgressbar.tsx","../src/CircularProgressbarWithChildren.tsx","../src/buildStyles.ts"],"sourcesContent":["export const VIEWBOX_WIDTH = 100;\nexport const VIEWBOX_HEIGHT = 100;\nexport const VIEWBOX_HEIGHT_HALF = 50;\nexport const VIEWBOX_CENTER_X = 50;\nexport const VIEWBOX_CENTER_Y = 50;\n","import * as React from 'react';\nimport { VIEWBOX_CENTER_X, VIEWBOX_CENTER_Y } from './constants';\n\nfunction Path({\n  className,\n  counterClockwise,\n  dashRatio,\n  pathRadius,\n  strokeWidth,\n  style,\n}: {\n  className?: string;\n  counterClockwise: boolean;\n  dashRatio: number;\n  pathRadius: number;\n  strokeWidth: number;\n  style?: object;\n}) {\n  return (\n    <path\n      className={className}\n      style={Object.assign({}, style, getDashStyle({ pathRadius, dashRatio, counterClockwise }))}\n      d={getPathDescription({\n        pathRadius,\n        counterClockwise,\n      })}\n      strokeWidth={strokeWidth}\n      fillOpacity={0}\n    />\n  );\n}\n\n// SVG path description specifies how the path should be drawn\nfunction getPathDescription({\n  pathRadius,\n  counterClockwise,\n}: {\n  pathRadius: number;\n  counterClockwise: boolean;\n}) {\n  const radius = pathRadius;\n  const rotation = counterClockwise ? 1 : 0;\n\n  // Move to center of canvas\n  // Relative move to top canvas\n  // Relative arc to bottom of canvas\n  // Relative arc to top of canvas\n  return `\n      M ${VIEWBOX_CENTER_X},${VIEWBOX_CENTER_Y}\n      m 0,-${radius}\n      a ${radius},${radius} ${rotation} 1 1 0,${2 * radius}\n      a ${radius},${radius} ${rotation} 1 1 0,-${2 * radius}\n    `;\n}\n\nfunction getDashStyle({\n  counterClockwise,\n  dashRatio,\n  pathRadius,\n}: {\n  counterClockwise: boolean;\n  dashRatio: number;\n  pathRadius: number;\n}) {\n  const diameter = Math.PI * 2 * pathRadius;\n  const gapLength = (1 - dashRatio) * diameter;\n\n  return {\n    // Have dash be full diameter, and gap be full diameter\n    strokeDasharray: `${diameter}px ${diameter}px`,\n    // Shift dash backward by gapLength, so gap starts appearing at correct distance\n    strokeDashoffset: `${counterClockwise ? -gapLength : gapLength}px`,\n  };\n}\n\nexport default Path;\n","import * as React from 'react';\n\nimport {\n  VIEWBOX_WIDTH,\n  VIEWBOX_HEIGHT,\n  VIEWBOX_HEIGHT_HALF,\n  VIEWBOX_CENTER_X,\n  VIEWBOX_CENTER_Y,\n} from './constants';\nimport Path from './Path';\nimport { CircularProgressbarDefaultProps, CircularProgressbarProps } from './types';\n\nclass CircularProgressbar extends React.Component<CircularProgressbarProps> {\n  static defaultProps: CircularProgressbarDefaultProps = {\n    background: false,\n    backgroundPadding: 0,\n    circleRatio: 1,\n    classes: {\n      root: 'CircularProgressbar',\n      trail: 'CircularProgressbar-trail',\n      path: 'CircularProgressbar-path',\n      text: 'CircularProgressbar-text',\n      background: 'CircularProgressbar-background',\n    },\n    counterClockwise: false,\n    className: '',\n    maxValue: 100,\n    minValue: 0,\n    strokeWidth: 8,\n    styles: {\n      root: {},\n      trail: {},\n      path: {},\n      text: {},\n      background: {},\n    },\n    text: '',\n  };\n\n  getBackgroundPadding() {\n    if (!this.props.background) {\n      // Don't add padding if not displaying background\n      return 0;\n    }\n    return this.props.backgroundPadding;\n  }\n\n  getPathRadius() {\n    // The radius of the path is defined to be in the middle, so in order for the path to\n    // fit perfectly inside the 100x100 viewBox, need to subtract half the strokeWidth\n    return VIEWBOX_HEIGHT_HALF - this.props.strokeWidth / 2 - this.getBackgroundPadding();\n  }\n\n  // Ratio of path length to trail length, as a value between 0 and 1\n  getPathRatio() {\n    const { value, minValue, maxValue } = this.props;\n    const boundedValue = Math.min(Math.max(value, minValue), maxValue);\n    return (boundedValue - minValue) / (maxValue - minValue);\n  }\n\n  render() {\n    const {\n      circleRatio,\n      className,\n      classes,\n      counterClockwise,\n      styles,\n      strokeWidth,\n      text,\n    } = this.props;\n\n    const pathRadius = this.getPathRadius();\n    const pathRatio = this.getPathRatio();\n\n    return (\n      <svg\n        className={`${classes.root} ${className}`}\n        style={styles.root}\n        viewBox={`0 0 ${VIEWBOX_WIDTH} ${VIEWBOX_HEIGHT}`}\n        data-test-id=\"CircularProgressbar\"\n      >\n        {this.props.background ? (\n          <circle\n            className={classes.background}\n            style={styles.background}\n            cx={VIEWBOX_CENTER_X}\n            cy={VIEWBOX_CENTER_Y}\n            r={VIEWBOX_HEIGHT_HALF}\n          />\n        ) : null}\n\n        <Path\n          className={classes.trail}\n          counterClockwise={counterClockwise}\n          dashRatio={circleRatio}\n          pathRadius={pathRadius}\n          strokeWidth={strokeWidth}\n          style={styles.trail}\n        />\n\n        <Path\n          className={classes.path}\n          counterClockwise={counterClockwise}\n          dashRatio={pathRatio * circleRatio}\n          pathRadius={pathRadius}\n          strokeWidth={strokeWidth}\n          style={styles.path}\n        />\n\n        {text ? (\n          <text\n            className={classes.text}\n            style={styles.text}\n            x={VIEWBOX_CENTER_X}\n            y={VIEWBOX_CENTER_Y}\n          >\n            {text}\n          </text>\n        ) : null}\n      </svg>\n    );\n  }\n}\n\nexport default CircularProgressbar;\n","import * as React from 'react';\n\nimport CircularProgressbar from './CircularProgressbar';\nimport { CircularProgressbarWrapperProps } from './types';\n\ntype CircularProgressbarWithChildrenProps = CircularProgressbarWrapperProps & {\n  children?: React.ReactNode;\n};\n\n// This is a wrapper around CircularProgressbar that allows passing children,\n// which will be vertically and horizontally centered inside the progressbar automatically.\nfunction CircularProgressbarWithChildren(props: CircularProgressbarWithChildrenProps) {\n  const { children, ...circularProgressbarProps } = props;\n\n  return (\n    <div data-test-id=\"CircularProgressbarWithChildren\">\n      {/* Has an extra div wrapper because otherwise, adding content after\n      this progressbar is spaced weirdly. */}\n      <div style={{ position: 'relative', width: '100%', height: '100%' }}>\n        {/* Progressbar is not positioned absolutely, so that it can establish\n      intrinsic size for props.children's content. */}\n        <CircularProgressbar {...circularProgressbarProps} />\n\n        {/* Children are positioned absolutely, and height adapts to the\n      progressbar's intrinsic size. It appears below the progressbar,\n      but negative margin moves it back up. */}\n        {props.children ? (\n          <div\n            data-test-id=\"CircularProgressbarWithChildren__children\"\n            style={{\n              position: 'absolute',\n              width: '100%',\n              height: '100%',\n              marginTop: '-100%',\n              display: 'flex',\n              flexDirection: 'column',\n              justifyContent: 'center',\n              alignItems: 'center',\n            }}\n          >\n            {props.children}\n          </div>\n        ) : null}\n      </div>\n    </div>\n  );\n}\n\nexport default CircularProgressbarWithChildren;\n","import { CircularProgressbarStyles } from './types';\n\nexport default function buildStyles({\n  rotation,\n  strokeLinecap,\n  textColor,\n  textSize,\n  pathColor,\n  pathTransition,\n  pathTransitionDuration,\n  trailColor,\n  backgroundColor,\n}: {\n  rotation?: number; // Number of turns, 0-1\n  strokeLinecap?: any;\n  textColor?: string;\n  textSize?: string | number;\n  pathColor?: string;\n  pathTransition?: string;\n  pathTransitionDuration?: number; // Measured in seconds\n  trailColor?: string;\n  backgroundColor?: string;\n}): CircularProgressbarStyles {\n  const rotationTransform = rotation == null ? undefined : `rotate(${rotation}turn)`;\n  const rotationTransformOrigin = rotation == null ? undefined : 'center center';\n\n  return {\n    root: {},\n    path: removeUndefinedValues({\n      stroke: pathColor,\n      strokeLinecap: strokeLinecap,\n      transform: rotationTransform,\n      transformOrigin: rotationTransformOrigin,\n      transition: pathTransition,\n      transitionDuration: pathTransitionDuration == null ? undefined : `${pathTransitionDuration}s`,\n    }),\n    trail: removeUndefinedValues({\n      stroke: trailColor,\n      strokeLinecap: strokeLinecap,\n      transform: rotationTransform,\n      transformOrigin: rotationTransformOrigin,\n    }),\n    text: removeUndefinedValues({\n      fill: textColor,\n      fontSize: textSize,\n    }),\n    background: removeUndefinedValues({\n      fill: backgroundColor,\n    }),\n  };\n}\n\nfunction removeUndefinedValues(obj: { [key: string]: any }) {\n  Object.keys(obj).forEach((key: string) => {\n    if (obj[key] == null) {\n      delete obj[key];\n    }\n  });\n  return obj;\n}\n"]},"metadata":{},"sourceType":"module"}